{
  ExecutionResult: {
    Executed: true,
    Data: {
      SelectionSet: {
        Location: {
          Start: 2,
          End: 76
        },
        Kind: SelectionSet,
        Selections: [
          {
            Location: {
              Start: 7,
              End: 73
            },
            Kind: Field,
            Name: {
              Location: {
                Start: 7,
                End: 21
              },
              Value: {
                Length: 14,
                IsEmpty: false
              },
              StringValue: withAttachment
            },
            Arguments: [
              {
                Location: {
                  Start: 23,
                  End: 48
                },
                Kind: Argument,
                Name: {
                  Location: {
                    Start: 23,
                    End: 31
                  },
                  Value: {
                    Length: 8,
                    IsEmpty: false
                  },
                  StringValue: argument
                },
                Value: {
                  Location: {
                    Start: 33,
                    End: 48
                  },
                  Kind: StringValue,
                  Value: {
                    Length: 13,
                    IsEmpty: false
                  }
                }
              }
            ],
            SelectionSet: {
              Location: {
                Start: 53,
                End: 73
              },
              Kind: SelectionSet,
              Selections: [
                {
                  Location: {
                    Start: 60,
                    End: 68
                  },
                  Kind: Field,
                  Name: {
                    Location: {
                      Start: 60,
                      End: 68
                    },
                    Value: {
                      Length: 8,
                      IsEmpty: false
                    },
                    StringValue: argument
                  }
                }
              ]
            }
          }
        ]
      },
      SubFields: [
        {
          SubFields: [
            {
              GraphType: {
                Name: String
              },
              Parent: {
                SubFields: [],
                SelectionSet: {
                  Location: {
                    Start: 53,
                    End: 73
                  },
                  Kind: SelectionSet,
                  Selections: [
                    {
                      Location: {
                        Start: 60,
                        End: 68
                      },
                      Kind: Field,
                      Name: {
                        Location: {
                          Start: 60,
                          End: 68
                        },
                        Value: {
                          Length: 8,
                          IsEmpty: false
                        },
                        StringValue: argument
                      }
                    }
                  ]
                },
                Parent: {
                  SelectionSet: {
                    Location: {
                      Start: 2,
                      End: 76
                    },
                    Kind: SelectionSet,
                    Selections: [
                      {
                        Location: {
                          Start: 7,
                          End: 73
                        },
                        Kind: Field,
                        Name: {
                          Location: {
                            Start: 7,
                            End: 21
                          },
                          Value: {
                            Length: 14,
                            IsEmpty: false
                          },
                          StringValue: withAttachment
                        },
                        Arguments: [
                          {
                            Location: {
                              Start: 23,
                              End: 48
                            },
                            Kind: Argument,
                            Name: {
                              Location: {
                                Start: 23,
                                End: 31
                              },
                              Value: {
                                Length: 8,
                                IsEmpty: false
                              },
                              StringValue: argument
                            },
                            Value: {
                              Location: {
                                Start: 33,
                                End: 48
                              },
                              Kind: StringValue,
                              Value: {
                                Length: 13,
                                IsEmpty: false
                              }
                            }
                          }
                        ],
                        SelectionSet: {
                          Location: {
                            Start: 53,
                            End: 73
                          },
                          Kind: SelectionSet,
                          Selections: [
                            {
                              Location: {
                                Start: 60,
                                End: 68
                              },
                              Kind: Field,
                              Name: {
                                Location: {
                                  Start: 60,
                                  End: 68
                                },
                                Value: {
                                  Length: 8,
                                  IsEmpty: false
                                },
                                StringValue: argument
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  SubFields: [],
                  GraphType: {
                    Interfaces: [],
                    ResolvedInterfaces: [],
                    Fields: [
                      {
                        Name: noAttachment,
                        Type: ResultGraph,
                        ResolvedType: {
                          IsTypeOf: {
                            Type: Func<object, bool>,
                            Target: ObjectGraphType<Result>.<>c,
                            Method: Boolean .ctor(System.Object)
                          },
                          Interfaces: [],
                          ResolvedInterfaces: [],
                          Fields: [
                            {
                              Name: argument,
                              Type: NonNullGraphType<StringGraphType>,
                              ResolvedType: {
                                Type: StringGraphType,
                                ResolvedType: {
                                  Name: String
                                }
                              },
                              Arguments: [],
                              Resolver: {},
                              Metadata: {
                                ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                              }
                            }
                          ],
                          Name: ResultGraph
                        },
                        Arguments: [
                          {
                            Name: argument,
                            ResolvedType: {
                              Type: StringGraphType,
                              ResolvedType: {
                                Name: String
                              }
                            },
                            Type: NonNullGraphType<StringGraphType>
                          }
                        ],
                        Resolver: {}
                      },
                      {
                        Name: withAttachment,
                        Type: ResultGraph,
                        ResolvedType: {
                          IsTypeOf: {
                            Type: Func<object, bool>,
                            Target: ObjectGraphType<Result>.<>c,
                            Method: Boolean .ctor(System.Object)
                          },
                          Interfaces: [],
                          ResolvedInterfaces: [],
                          Fields: [
                            {
                              Name: argument,
                              Type: NonNullGraphType<StringGraphType>,
                              ResolvedType: {
                                Type: StringGraphType,
                                ResolvedType: {
                                  Name: String
                                }
                              },
                              Arguments: [],
                              Resolver: {},
                              Metadata: {
                                ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                              }
                            }
                          ],
                          Name: ResultGraph
                        },
                        Arguments: [
                          {
                            Name: argument,
                            ResolvedType: {
                              Type: StringGraphType,
                              ResolvedType: {
                                Name: String
                              }
                            },
                            Type: NonNullGraphType<StringGraphType>
                          }
                        ],
                        Resolver: {}
                      }
                    ],
                    Name: Query
                  },
                  Path: [],
                  ResponsePath: []
                },
                GraphType: {
                  IsTypeOf: {
                    Type: Func<object, bool>,
                    Target: ObjectGraphType<Result>.<>c,
                    Method: Boolean .ctor(System.Object)
                  },
                  Interfaces: [],
                  ResolvedInterfaces: [],
                  Fields: [
                    {
                      Name: argument,
                      Type: NonNullGraphType<StringGraphType>,
                      ResolvedType: {
                        Type: StringGraphType,
                        ResolvedType: {
                          Name: String
                        }
                      },
                      Arguments: [],
                      Resolver: {},
                      Metadata: {
                        ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                      }
                    }
                  ],
                  Name: ResultGraph
                },
                Field: {
                  Location: {
                    Start: 7,
                    End: 73
                  },
                  Kind: Field,
                  Name: {
                    Location: {
                      Start: 7,
                      End: 21
                    },
                    Value: {
                      Length: 14,
                      IsEmpty: false
                    },
                    StringValue: withAttachment
                  },
                  Arguments: [
                    {
                      Location: {
                        Start: 23,
                        End: 48
                      },
                      Kind: Argument,
                      Name: {
                        Location: {
                          Start: 23,
                          End: 31
                        },
                        Value: {
                          Length: 8,
                          IsEmpty: false
                        },
                        StringValue: argument
                      },
                      Value: {
                        Location: {
                          Start: 33,
                          End: 48
                        },
                        Kind: StringValue,
                        Value: {
                          Length: 13,
                          IsEmpty: false
                        }
                      }
                    }
                  ],
                  SelectionSet: {
                    Location: {
                      Start: 53,
                      End: 73
                    },
                    Kind: SelectionSet,
                    Selections: [
                      {
                        Location: {
                          Start: 60,
                          End: 68
                        },
                        Kind: Field,
                        Name: {
                          Location: {
                            Start: 60,
                            End: 68
                          },
                          Value: {
                            Length: 8,
                            IsEmpty: false
                          },
                          StringValue: argument
                        }
                      }
                    ]
                  }
                },
                FieldDefinition: {
                  Name: withAttachment,
                  Type: ResultGraph,
                  ResolvedType: {
                    IsTypeOf: {
                      Type: Func<object, bool>,
                      Target: ObjectGraphType<Result>.<>c,
                      Method: Boolean .ctor(System.Object)
                    },
                    Interfaces: [],
                    ResolvedInterfaces: [],
                    Fields: [
                      {
                        Name: argument,
                        Type: NonNullGraphType<StringGraphType>,
                        ResolvedType: {
                          Type: StringGraphType,
                          ResolvedType: {
                            Name: String
                          }
                        },
                        Arguments: [],
                        Resolver: {},
                        Metadata: {
                          ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                        }
                      }
                    ],
                    Name: ResultGraph
                  },
                  Arguments: [
                    {
                      Name: argument,
                      ResolvedType: {
                        Type: StringGraphType,
                        ResolvedType: {
                          Name: String
                        }
                      },
                      Type: NonNullGraphType<StringGraphType>
                    }
                  ],
                  Resolver: {}
                },
                Name: withAttachment,
                Result: {
                  Argument: argumentValue
                },
                Path: [
                  withAttachment
                ],
                ResponsePath: [
                  withAttachment
                ]
              },
              Field: {
                Location: {
                  Start: 60,
                  End: 68
                },
                Kind: Field,
                Name: {
                  Location: {
                    Start: 60,
                    End: 68
                  },
                  Value: {
                    Length: 8,
                    IsEmpty: false
                  },
                  StringValue: argument
                }
              },
              FieldDefinition: {
                Name: argument,
                Type: NonNullGraphType<StringGraphType>,
                ResolvedType: {
                  Type: StringGraphType,
                  ResolvedType: {
                    Name: String
                  }
                },
                Arguments: [],
                Resolver: {},
                Metadata: {
                  ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                }
              },
              Name: argument,
              Result: argumentValue,
              Source: {
                Argument: argumentValue
              },
              Path: [
                withAttachment,
                argument
              ],
              ResponsePath: [
                withAttachment,
                argument
              ]
            }
          ],
          SelectionSet: {
            Location: {
              Start: 53,
              End: 73
            },
            Kind: SelectionSet,
            Selections: [
              {
                Location: {
                  Start: 60,
                  End: 68
                },
                Kind: Field,
                Name: {
                  Location: {
                    Start: 60,
                    End: 68
                  },
                  Value: {
                    Length: 8,
                    IsEmpty: false
                  },
                  StringValue: argument
                }
              }
            ]
          },
          Parent: {
            SelectionSet: {
              Location: {
                Start: 2,
                End: 76
              },
              Kind: SelectionSet,
              Selections: [
                {
                  Location: {
                    Start: 7,
                    End: 73
                  },
                  Kind: Field,
                  Name: {
                    Location: {
                      Start: 7,
                      End: 21
                    },
                    Value: {
                      Length: 14,
                      IsEmpty: false
                    },
                    StringValue: withAttachment
                  },
                  Arguments: [
                    {
                      Location: {
                        Start: 23,
                        End: 48
                      },
                      Kind: Argument,
                      Name: {
                        Location: {
                          Start: 23,
                          End: 31
                        },
                        Value: {
                          Length: 8,
                          IsEmpty: false
                        },
                        StringValue: argument
                      },
                      Value: {
                        Location: {
                          Start: 33,
                          End: 48
                        },
                        Kind: StringValue,
                        Value: {
                          Length: 13,
                          IsEmpty: false
                        }
                      }
                    }
                  ],
                  SelectionSet: {
                    Location: {
                      Start: 53,
                      End: 73
                    },
                    Kind: SelectionSet,
                    Selections: [
                      {
                        Location: {
                          Start: 60,
                          End: 68
                        },
                        Kind: Field,
                        Name: {
                          Location: {
                            Start: 60,
                            End: 68
                          },
                          Value: {
                            Length: 8,
                            IsEmpty: false
                          },
                          StringValue: argument
                        }
                      }
                    ]
                  }
                }
              ]
            },
            SubFields: [],
            GraphType: {
              Interfaces: [],
              ResolvedInterfaces: [],
              Fields: [
                {
                  Name: noAttachment,
                  Type: ResultGraph,
                  ResolvedType: {
                    IsTypeOf: {
                      Type: Func<object, bool>,
                      Target: ObjectGraphType<Result>.<>c,
                      Method: Boolean .ctor(System.Object)
                    },
                    Interfaces: [],
                    ResolvedInterfaces: [],
                    Fields: [
                      {
                        Name: argument,
                        Type: NonNullGraphType<StringGraphType>,
                        ResolvedType: {
                          Type: StringGraphType,
                          ResolvedType: {
                            Name: String
                          }
                        },
                        Arguments: [],
                        Resolver: {},
                        Metadata: {
                          ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                        }
                      }
                    ],
                    Name: ResultGraph
                  },
                  Arguments: [
                    {
                      Name: argument,
                      ResolvedType: {
                        Type: StringGraphType,
                        ResolvedType: {
                          Name: String
                        }
                      },
                      Type: NonNullGraphType<StringGraphType>
                    }
                  ],
                  Resolver: {}
                },
                {
                  Name: withAttachment,
                  Type: ResultGraph,
                  ResolvedType: {
                    IsTypeOf: {
                      Type: Func<object, bool>,
                      Target: ObjectGraphType<Result>.<>c,
                      Method: Boolean .ctor(System.Object)
                    },
                    Interfaces: [],
                    ResolvedInterfaces: [],
                    Fields: [
                      {
                        Name: argument,
                        Type: NonNullGraphType<StringGraphType>,
                        ResolvedType: {
                          Type: StringGraphType,
                          ResolvedType: {
                            Name: String
                          }
                        },
                        Arguments: [],
                        Resolver: {},
                        Metadata: {
                          ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                        }
                      }
                    ],
                    Name: ResultGraph
                  },
                  Arguments: [
                    {
                      Name: argument,
                      ResolvedType: {
                        Type: StringGraphType,
                        ResolvedType: {
                          Name: String
                        }
                      },
                      Type: NonNullGraphType<StringGraphType>
                    }
                  ],
                  Resolver: {}
                }
              ],
              Name: Query
            },
            Path: [],
            ResponsePath: []
          },
          GraphType: {
            IsTypeOf: {
              Type: Func<object, bool>,
              Target: ObjectGraphType<Result>.<>c,
              Method: Boolean .ctor(System.Object)
            },
            Interfaces: [],
            ResolvedInterfaces: [],
            Fields: [
              {
                Name: argument,
                Type: NonNullGraphType<StringGraphType>,
                ResolvedType: {
                  Type: StringGraphType,
                  ResolvedType: {
                    Name: String
                  }
                },
                Arguments: [],
                Resolver: {},
                Metadata: {
                  ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                }
              }
            ],
            Name: ResultGraph
          },
          Field: {
            Location: {
              Start: 7,
              End: 73
            },
            Kind: Field,
            Name: {
              Location: {
                Start: 7,
                End: 21
              },
              Value: {
                Length: 14,
                IsEmpty: false
              },
              StringValue: withAttachment
            },
            Arguments: [
              {
                Location: {
                  Start: 23,
                  End: 48
                },
                Kind: Argument,
                Name: {
                  Location: {
                    Start: 23,
                    End: 31
                  },
                  Value: {
                    Length: 8,
                    IsEmpty: false
                  },
                  StringValue: argument
                },
                Value: {
                  Location: {
                    Start: 33,
                    End: 48
                  },
                  Kind: StringValue,
                  Value: {
                    Length: 13,
                    IsEmpty: false
                  }
                }
              }
            ],
            SelectionSet: {
              Location: {
                Start: 53,
                End: 73
              },
              Kind: SelectionSet,
              Selections: [
                {
                  Location: {
                    Start: 60,
                    End: 68
                  },
                  Kind: Field,
                  Name: {
                    Location: {
                      Start: 60,
                      End: 68
                    },
                    Value: {
                      Length: 8,
                      IsEmpty: false
                    },
                    StringValue: argument
                  }
                }
              ]
            }
          },
          FieldDefinition: {
            Name: withAttachment,
            Type: ResultGraph,
            ResolvedType: {
              IsTypeOf: {
                Type: Func<object, bool>,
                Target: ObjectGraphType<Result>.<>c,
                Method: Boolean .ctor(System.Object)
              },
              Interfaces: [],
              ResolvedInterfaces: [],
              Fields: [
                {
                  Name: argument,
                  Type: NonNullGraphType<StringGraphType>,
                  ResolvedType: {
                    Type: StringGraphType,
                    ResolvedType: {
                      Name: String
                    }
                  },
                  Arguments: [],
                  Resolver: {},
                  Metadata: {
                    ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                  }
                }
              ],
              Name: ResultGraph
            },
            Arguments: [
              {
                Name: argument,
                ResolvedType: {
                  Type: StringGraphType,
                  ResolvedType: {
                    Name: String
                  }
                },
                Type: NonNullGraphType<StringGraphType>
              }
            ],
            Resolver: {}
          },
          Name: withAttachment,
          Result: {
            Argument: argumentValue
          },
          Path: [
            withAttachment
          ],
          ResponsePath: [
            withAttachment
          ]
        }
      ],
      GraphType: {
        Interfaces: [],
        ResolvedInterfaces: [],
        Fields: [
          {
            Name: noAttachment,
            Type: ResultGraph,
            ResolvedType: {
              IsTypeOf: {
                Type: Func<object, bool>,
                Target: ObjectGraphType<Result>.<>c,
                Method: Boolean .ctor(System.Object)
              },
              Interfaces: [],
              ResolvedInterfaces: [],
              Fields: [
                {
                  Name: argument,
                  Type: NonNullGraphType<StringGraphType>,
                  ResolvedType: {
                    Type: StringGraphType,
                    ResolvedType: {
                      Name: String
                    }
                  },
                  Arguments: [],
                  Resolver: {},
                  Metadata: {
                    ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                  }
                }
              ],
              Name: ResultGraph
            },
            Arguments: [
              {
                Name: argument,
                ResolvedType: {
                  Type: StringGraphType,
                  ResolvedType: {
                    Name: String
                  }
                },
                Type: NonNullGraphType<StringGraphType>
              }
            ],
            Resolver: {}
          },
          {
            Name: withAttachment,
            Type: ResultGraph,
            ResolvedType: {
              IsTypeOf: {
                Type: Func<object, bool>,
                Target: ObjectGraphType<Result>.<>c,
                Method: Boolean .ctor(System.Object)
              },
              Interfaces: [],
              ResolvedInterfaces: [],
              Fields: [
                {
                  Name: argument,
                  Type: NonNullGraphType<StringGraphType>,
                  ResolvedType: {
                    Type: StringGraphType,
                    ResolvedType: {
                      Name: String
                    }
                  },
                  Arguments: [],
                  Resolver: {},
                  Metadata: {
                    ORIGINAL_EXPRESSION_PROPERTY_NAME: Argument
                  }
                }
              ],
              Name: ResultGraph
            },
            Arguments: [
              {
                Name: argument,
                ResolvedType: {
                  Type: StringGraphType,
                  ResolvedType: {
                    Name: String
                  }
                },
                Type: NonNullGraphType<StringGraphType>
              }
            ],
            Resolver: {}
          }
        ],
        Name: Query
      },
      Path: [],
      ResponsePath: []
    },
    Query: {
      Length: 76,
      IsEmpty: false
    }
  },
  Attachments: {
    HasPendingAttachments: true,
    Inner: {
      key: {
        Headers: null,
        Value: Incoming
      }
    }
  }
}